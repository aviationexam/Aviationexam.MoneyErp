name: Get Access Token

on:
  workflow_call:
    secrets:
      TOKEN_SERVER_URL:
        required: true
      CLIENT_ID:
        required: true
      CLIENT_SECRET:
        required: true
    outputs:
      access_token:
        description: "The access token"
        value: ${{ jobs.get-token.outputs.access_token }}

jobs:
  get-token:
    runs-on: ubuntu-latest
    outputs:
      access_token: ${{ steps.get_token.outputs.access_token }}
    steps:
      - name: Request access token from OpenIddict
        id: get_token
        run: |
          response=$(curl -s --request POST "${{ secrets.TOKEN_SERVER_URL }}/connect/token" \
            --header "Content-Type: application/x-www-form-urlencoded" \
            --data-urlencode "grant_type=client_credentials" \
            --data-urlencode "client_id=${{ secrets.CLIENT_ID }}" \
            --data-urlencode "client_secret=${{ secrets.CLIENT_SECRET }}" \
            --data-urlencode "scope=S5Api")

          echo "Response: $response"
          token=$(echo "$response" | jq -r .access_token)

          if [ "$token" == "null" ] || [ -z "$token" ]; then
            echo "Error: Could not retrieve access token"
            exit 1
          fi

          echo "::add-mask::$token"
          echo "access_token=$token" >> "$GITHUB_OUTPUT"

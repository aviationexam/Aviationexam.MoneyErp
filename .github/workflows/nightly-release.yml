name: Nightly MyGet Package Deploy

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
    steps:
      - name: Setup .Net
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            9.0.x
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.0.0
        with:
          versionSpec: '6.x'
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v4.0.0
      - run: |
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}"
          echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
      - name: Get access token
        id: get_token
        uses: ./.github/actions/get-access-token
        with:
          token_server_url: ${{ secrets.MONEYERP_ENDPOINT }}
          client_id: ${{ secrets.MONEYERP_CLIENT_ID }}
          client_secret: ${{ secrets.MONEYERP_CLIENT_SECRET }}
      - name: Fetch GrapQL schema
        uses: ./.github/actions/fetch-graphql-schema
        with:
          endpoint: ${{ secrets.MONEYERP_ENDPOINT }}
          access_token: ${{ steps.get_token.outputs.access_token }}
      - uses: actions/upload-artifact@v4
        with:
          name: schema-${{ steps.gitversion.outputs.FullSemVer }}.graphql
          path: src/Aviationexam.MoneyErp.Graphql/schema.graphql
      - name: Tool restore
        run: dotnet tool restore
      - name: Restore with .Net
        run: dotnet restore --nologo
      - uses: actions/upload-artifact@v4
        with:
          name: openapi-original-${{ steps.gitversion.outputs.FullSemVer }}.json
          path: src/Aviationexam.MoneyErp.RestApi/openapi.original.json
      - name: Build with .Net
        run: dotnet build --configuration Release --no-restore --nologo "-p:Version=${{ steps.gitversion.outputs.FullSemVer }}"
      - name: Pack with .Net
        run: |
          dotnet pack src/Aviationexam.MoneyErp.Common/Aviationexam.MoneyErp.Common.csproj --nologo --no-build --configuration Release --output nuget-packages -p:PackageVersion=${{ steps.gitversion.outputs.FullSemVer }}
          dotnet pack src/Aviationexam.MoneyErp.RestApi/Aviationexam.MoneyErp.RestApi.csproj --nologo --no-build --configuration Release --output nuget-packages -p:PackageVersion=${{ steps.gitversion.outputs.FullSemVer }}
          dotnet pack src/Aviationexam.MoneyErp.Graphql/Aviationexam.MoneyErp.Graphql.csproj --nologo --no-build --configuration Release --output nuget-packages -p:PackageVersion=${{ steps.gitversion.outputs.FullSemVer }}
      - uses: actions/upload-artifact@v4
        with:
          name: Nuget-packages-${{ steps.gitversion.outputs.FullSemVer }}
          path: nuget-packages
      - name: Push package to Myget
        if: ${{ vars.USE_MYGET == 'true' }}
        run: dotnet nuget push 'nuget-packages/*.nupkg' --api-key ${{ secrets.MYGET_API_KEY }} --source https://www.myget.org/F/money-erp/api/v3/index.json
      - name: Push package to Feedz
        if: ${{ vars.USE_FEEDZ == 'true' }}
        run: dotnet nuget push 'nuget-packages/*.nupkg' --api-key ${{ secrets.FEEDZ_API_KEY }} --source https://f.feedz.io/aviationexam/money-erp/nuget/index.json
